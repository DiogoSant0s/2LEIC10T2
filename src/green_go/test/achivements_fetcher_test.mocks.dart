// Mocks generated by Mockito 5.4.4 from annotations
// in green_go/test/achivements_fetcher_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:green_go/controller/database/database_achievements.dart' as _i2;
import 'package:green_go/controller/database/database_user_achievements.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DataBaseAchievements].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataBaseAchievements extends _i1.Mock
    implements _i2.DataBaseAchievements {
  @override
  _i3.Future<dynamic> getAllAchievements() => (super.noSuchMethod(
        Invocation.method(
          #getAllAchievements,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}

/// A class which mocks [DataBaseUserAchievements].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataBaseUserAchievements extends _i1.Mock
    implements _i4.DataBaseUserAchievements {
  @override
  _i3.Future<dynamic> getUserAchievements(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #getUserAchievements,
          [uid],
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> deleteUserAchievement(
    String? userId,
    String? achievementId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUserAchievement,
          [
            userId,
            achievementId,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> addUserAchievement(
    String? userId,
    String? achievementId,
    int? points,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserAchievement,
          [
            userId,
            achievementId,
            points,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> addCompletedAchievement(
    String? userId,
    String? achievementId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCompletedAchievement,
          [
            userId,
            achievementId,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
        returnValueForMissingStub: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}
