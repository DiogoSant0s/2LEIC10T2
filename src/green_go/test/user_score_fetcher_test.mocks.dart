// Mocks generated by Mockito 5.4.4 from annotations
// in green_go/test/user_score_fetcher_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i8;
import 'package:green_go/controller/authentication/auth.dart' as _i7;
import 'package:green_go/controller/database/database_users.dart' as _i4;
import 'package:green_go/controller/verifiers/achievement_verifier.dart' as _i2;
import 'package:green_go/model/user_model.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAchievementVerifier_0 extends _i1.SmartFake
    implements _i2.AchievementVerifier {
  _FakeAchievementVerifier_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentSnapshot_1<T extends Object?> extends _i1.SmartFake
    implements _i3.DocumentSnapshot<T> {
  _FakeDocumentSnapshot_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataBaseUsers_2 extends _i1.SmartFake implements _i4.DataBaseUsers {
  _FakeDataBaseUsers_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DataBaseUsers].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataBaseUsers extends _i1.Mock implements _i4.DataBaseUsers {
  @override
  _i2.AchievementVerifier get achievementVerifier => (super.noSuchMethod(
        Invocation.getter(#achievementVerifier),
        returnValue: _FakeAchievementVerifier_0(
          this,
          Invocation.getter(#achievementVerifier),
        ),
        returnValueForMissingStub: _FakeAchievementVerifier_0(
          this,
          Invocation.getter(#achievementVerifier),
        ),
      ) as _i2.AchievementVerifier);

  @override
  set achievementVerifier(_i2.AchievementVerifier? _achievementVerifier) =>
      super.noSuchMethod(
        Invocation.setter(
          #achievementVerifier,
          _achievementVerifier,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<dynamic> addUser(_i6.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [user],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> updateUserPoints(
    String? uid,
    int? points,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserPoints,
          [
            uid,
            points,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> updateUserGoal(
    String? uid,
    int? goal,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserGoal,
          [
            uid,
            goal,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> updateUserProfile(
    String? uid,
    String? username,
    String? nationality,
    String? job,
    DateTime? birthDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [
            uid,
            username,
            nationality,
            job,
            birthDate,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> updateUserPicture(
    String? uid,
    String? photoUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserPicture,
          [
            uid,
            photoUrl,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> getAllData() => (super.noSuchMethod(
        Invocation.method(
          #getAllData,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<_i3.DocumentSnapshot<Object?>> getUserData(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [uid],
        ),
        returnValue: _i5.Future<_i3.DocumentSnapshot<Object?>>.value(
            _FakeDocumentSnapshot_1<Object?>(
          this,
          Invocation.method(
            #getUserData,
            [uid],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.DocumentSnapshot<Object?>>.value(
                _FakeDocumentSnapshot_1<Object?>(
          this,
          Invocation.method(
            #getUserData,
            [uid],
          ),
        )),
      ) as _i5.Future<_i3.DocumentSnapshot<Object?>>);

  @override
  void deleteUser(String? uid) => super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [uid],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i7.AuthService {
  @override
  _i4.DataBaseUsers get dataBaseUsers => (super.noSuchMethod(
        Invocation.getter(#dataBaseUsers),
        returnValue: _FakeDataBaseUsers_2(
          this,
          Invocation.getter(#dataBaseUsers),
        ),
        returnValueForMissingStub: _FakeDataBaseUsers_2(
          this,
          Invocation.getter(#dataBaseUsers),
        ),
      ) as _i4.DataBaseUsers);

  @override
  set dataBaseUsers(_i4.DataBaseUsers? _dataBaseUsers) => super.noSuchMethod(
        Invocation.setter(
          #dataBaseUsers,
          _dataBaseUsers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFirebaseAuth(_i8.FirebaseAuth? firebaseAuth) => super.noSuchMethod(
        Invocation.method(
          #setFirebaseAuth,
          [firebaseAuth],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDataBaseUsers(_i4.DataBaseUsers? dataBaseUsers) => super.noSuchMethod(
        Invocation.method(
          #setDataBaseUsers,
          [dataBaseUsers],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<String?> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<String?> signUp(
    String? email,
    String? password,
    String? username,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            email,
            password,
            username,
          ],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<String?> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<dynamic> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
}
